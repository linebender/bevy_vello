[workspace]
resolver = "2"
members = [
  "examples/run_wasm",
  "examples/demo",
  "examples/drag_n_drop",
  "examples/text",
  "examples/scene",
  "examples/svg",
  "examples/lottie",
  "examples/scene_ui",
  "examples/render_layers",
  "examples/cube3d",
]

[workspace.package]
edition = "2021"
version = "0.6.1"
license = "(MIT OR Apache-2.0) AND OFL-1.1"
repository = "https://github.com/linebender/bevy_vello"

[workspace.dependencies]
bevy = { version = "0.15.0", default-features = false, features = [
  "bevy_asset",
  "bevy_winit",
  "bevy_core_pipeline",
  "bevy_window",
  "bevy_pbr",
  "bevy_render",
  "bevy_ui",
  "multi_threaded",
  "x11",
  "tonemapping_luts",
  "bevy_gizmos",
] }

[package]
name = "bevy_vello"
description = "Render assets and scenes in Bevy with Vello"
authors = [
  "Sebastian Hamel <sebjfk@gmail.com>",
  "Spencer C. Imbleau <spencer@imbleau.com>",
]
keywords = ["gamedev", "graphics"]
version.workspace = true
license.workspace = true
edition.workspace = true
repository.workspace = true

[lib]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
bevy = { workspace = true }
vello = "0.2.1"
vello_svg = "0.3.1"
velato = "0.3.1"
thiserror = "2.0.6"
once_cell = "1.20.2"

[dev-dependencies]
wasm-bindgen-test = "0.3.49"

[features]
default = ["default_font"]
svg = []
lottie = []
experimental-dotLottie = ["lottie"]
default_font = []


[workspace.lints]
# LINEBENDER LINT SET - Cargo.toml - v2
# See https://linebender.org/wiki/canonical-lints/
rust.keyword_idents_2024 = "forbid"
rust.non_ascii_idents = "forbid"
rust.non_local_definitions = "forbid"
rust.unsafe_op_in_unsafe_fn = "forbid"
rust.elided_lifetimes_in_paths = "warn"
rust.let_underscore_drop = "warn"
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.single_use_lifetimes = "warn"
rust.trivial_numeric_casts = "warn"
rust.unexpected_cfgs = "warn"
rust.unit_bindings = "warn"
rust.unnameable_types = "warn"
rust.unreachable_pub = "warn"
rust.unused_import_braces = "warn"
rust.unused_lifetimes = "warn"
rust.unused_macro_rules = "warn"
rust.unused_qualifications = "warn"
rust.variant_size_differences = "warn"
clippy.allow_attributes = "warn"
clippy.allow_attributes_without_reason = "warn"
clippy.cast_possible_truncation = "warn"
clippy.collection_is_never_read = "warn"
clippy.dbg_macro = "warn"
clippy.debug_assert_with_mut_call = "warn"
clippy.doc_markdown = "warn"
clippy.exhaustive_enums = "warn"
clippy.fn_to_numeric_cast_any = "forbid"
clippy.infinite_loop = "warn"
clippy.large_include_file = "warn"
clippy.large_stack_arrays = "warn"
clippy.match_same_arms = "warn"
clippy.mismatching_type_param_order = "warn"
clippy.missing_assert_message = "warn"
clippy.missing_errors_doc = "warn"
clippy.missing_fields_in_debug = "warn"
clippy.missing_panics_doc = "warn"
clippy.partial_pub_fields = "warn"
clippy.return_self_not_must_use = "warn"
clippy.same_functions_in_if_condition = "warn"
clippy.semicolon_if_nothing_returned = "warn"
clippy.shadow_unrelated = "warn"
clippy.should_panic_without_expect = "warn"
clippy.todo = "warn"
clippy.trivially_copy_pass_by_ref = "warn"
clippy.unseparated_literal_suffix = "warn"
clippy.use_self = "warn"
clippy.wildcard_imports = "warn"
clippy.cargo_common_metadata = "warn"
clippy.negative_feature_names = "warn"
clippy.redundant_feature_names = "warn"
clippy.wildcard_dependencies = "warn"
# END LINEBENDER LINT SET
